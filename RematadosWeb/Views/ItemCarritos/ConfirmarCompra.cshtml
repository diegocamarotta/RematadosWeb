@model List<RematadosWeb.Models.ItemCarrito>

@{
    ViewData["Title"] = "Confirmar compra";
}

<h1>Confirma la compra para los siguientes artículos?</h1>


<table class="table">
    <thead>
        <tr>
            @*<th>
                    @Html.DisplayNameFor(model => model.Cantidad)
                </th>*@
            <th>
                Imagen
            </th>
            @*<th>
                    @Html.DisplayNameFor(model => model.Articulo.Nombre)
                </th>*@
        </tr>
    </thead>
    <tbody>
        >


    </tbody>
</table>



<form asp-action="ConfirmarCompra" id="mainform" method="POST">
    @for (var i = 0; i < Model.Count(); i++)
    {

        <input asp-for="@Model[i].Id" type="hidden" />
        <input asp-for="@Model[i].Usuario" type="hidden" />
        <input asp-for="@Model[i].Cantidad" type="hidden" />
        <input asp-for="@Model[i].Articulo" type="hidden" />
        <input asp-for="@Model[i].Articulo.Id" type="hidden" />

        <br />
    }
    <input type="submit" class="btn btn-primary compra" value="Submit">

</form>
<a asp-action="ConfirmarCompra">Confirmar</a>

<script src="//cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>
    const compras = document.querySelectorAll('.compra');

    // Crear función para mostrar alerta
    function comprar(e) {

        /*e.preventDefault();*/
        Swal.fire({
            title: 'Compraste exitosamente @Model.ToString()!',
            text: 'Volviendo al carrito',
            icon: 'success',
            showConfirmButton: false
            //It does close the popup when I click on close button
            // Encadena la promesa para saber lo que pasó en la ventana modal
        }).then((result) => {
            if (result) { // if confirm clicked....
                /* $('#input').submit(); // submit form*/
            }
        })

    }

    compras.forEach(btn => btn.addEventListener('click', comprar));


</script>




